def find_max_product(matrix):
    n = len(matrix)
    max_product = 0
    
    for i in range(n):
        for j in range(n - 4):
        
            product_h = matrix[i][j] * matrix[i][j+1] * matrix[i][j+2] * matrix[i][j+3] * matrix[i][j+4]
            max_product = max(max_product, product_h)
            
            product_v = matrix[j][i] * matrix[j+1][i] * matrix[j+2][i] * matrix[j+3][i] * matrix[j+4][i]
            max_product = max(max_product, product_v)
    
    for i in range(n - 4):
        for j in range(n - 4):
            product_d = matrix[i][j] * matrix[i+1][j+1] * matrix[i+2][j+2] * matrix[i+3][j+3] * matrix[i+4][j+4]
            max_product = max(max_product, product_d)
    
    for i in range(n - 4):
        for j in range(4, n):
            product_d = matrix[i][j] * matrix[i+1][j-1] * matrix[i+2][j-2] * matrix[i+3][j-3] * matrix[i+4][j-4]
            max_product = max(max_product, product_d)
    
    return max_product


matrix = [
    [2, 1, 1, 1, 1],
    [1, 2, 1, 1, 1],
    [1, 1, 2, 1, 1],
    [1, 1, 1, 2, 1],
    [1, 1, 1, 1, 2]
]

result = find_max_product(matrix)

print("O maior produto de uma sequência de 5 números consecutivos é:", result)
